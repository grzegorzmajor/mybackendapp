app_user:
  name: ${X_USER_NAME}
  hashedPassword: ${HASHED_PASS}

auth:
  jwt:
    expirationDays: 1
    secret: ${JWT_SECRET}
    issuer: my-backend

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT

server:
  ssl:
    key-store: src/main/resources/keystore/major.p12
    key-store-password: ${KEY_STORE_PASS}
    key-password: ${KEY_STORE_PASS}
    key-store-type: PKCS12
    key-alias: major.ovh
  port: 443

spring:
  jpa:
    #show-sql: true
    hibernate:
      #It is a good security practice to, after your database is in a production state, set this to none, revoke all
      #privileges from the MySQL user connected to the Spring application, and give the MySQL user only SELECT, UPDATE, INSERT, and DELETE.
      ddl-auto: update
  datasource:
    url: jdbc:mariadb://${DB_HOST}:3306/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASS}
    driver-class-name: org.mariadb.jdbc.Driver
  sql:
    init:
      mode: always
